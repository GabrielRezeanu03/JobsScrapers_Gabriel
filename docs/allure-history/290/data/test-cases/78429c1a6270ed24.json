{"uid":"78429c1a6270ed24","name":"test_scrapers[pimcopyScraper]","fullName":"tests.test_api.TestScrapers#test_scrapers","historyId":"511e2d67950ab455a65cbe145ae56d87","time":{"start":1702657224701,"stop":1702657225621,"duration":920},"status":"failed","statusMessage":"AssertionError: assert ['OPERATOR CALCULATOR – TIPOGRAFIE / COPY CENTER', 'OPERATOR GHILOTINĂ /MANIPULARE HARTIE', 'TEHNICIAN SERVICE'] == []\n  Left contains 3 more items, first extra item: 'OPERATOR CALCULATOR – TIPOGRAFIE / COPY CENTER'\n  Full diff:\n    [\n  -  ,\n  +  'OPERATOR CALCULATOR – TIPOGRAFIE / COPY CENTER',\n  +  'OPERATOR GHILOTINĂ /MANIPULARE HARTIE',\n  +  'TEHNICIAN SERVICE',\n    ]","statusTrace":"self = <test_api.TestScrapers object at 0x7f4929e67df0>\nscraper_class = <class 'sites.pimcopy.pimcopyScraper'>\n\n    @pytest.mark.regression\n    def test_scrapers(self, scraper_class):\n        setup_tests = SetupTests()\n        setup_tests.get_jobs_careers(scraper_class)\n    \n        # You can now use the utility methods from TestUtils to avoid code duplication\n        scraped_jobs_data = TestUtils.scrape_jobs(setup_tests.scraper_data[0])\n        peviitor_jobs_data = TestUtils.scrape_peviitor(setup_tests.scraper_data[1], 'România')\n    \n        # Test Title\n>       assert sorted(scraped_jobs_data[0]) == sorted(peviitor_jobs_data[0])\nE       AssertionError: assert ['OPERATOR CALCULATOR – TIPOGRAFIE / COPY CENTER', 'OPERATOR GHILOTINĂ /MANIPULARE HARTIE', 'TEHNICIAN SERVICE'] == []\nE         Left contains 3 more items, first extra item: 'OPERATOR CALCULATOR – TIPOGRAFIE / COPY CENTER'\nE         Full diff:\nE           [\nE         -  ,\nE         +  'OPERATOR CALCULATOR – TIPOGRAFIE / COPY CENTER',\nE         +  'OPERATOR GHILOTINĂ /MANIPULARE HARTIE',\nE         +  'TEHNICIAN SERVICE',\nE           ]\n\ntests/test_api.py:47: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"scraper_class","time":{"start":1702657224701,"stop":1702657224701,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestScrapers"},{"name":"host","value":"fv-az1379-0"},{"name":"thread","value":"2163-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"scraper_class","value":"<class 'sites.pimcopy.pimcopyScraper'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["regression"]},"source":"78429c1a6270ed24.json","parameterValues":["<class 'sites.pimcopy.pimcopyScraper'>"]}