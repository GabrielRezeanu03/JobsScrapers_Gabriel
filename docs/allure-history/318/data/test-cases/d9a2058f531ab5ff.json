{"uid":"d9a2058f531ab5ff","name":"test_scrapers[NagarroScraper]","fullName":"tests.test_api.TestScrapers#test_scrapers","historyId":"b81ed4029bb3b482cd4fa679cb4972c9","time":{"start":1702818059732,"stop":1702818061339,"duration":1607},"status":"failed","statusMessage":"AssertionError: assert ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania'] == ['România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România']\n  At index 0 diff: 'Romania' != 'România'\n  Full diff:\n    [\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n    ]","statusTrace":"self = <test_api.TestScrapers object at 0x7fc23b2b4c40>\nscraper_class = <class 'sites.nagarro.NagarroScraper'>\n\n    @pytest.mark.regression\n    def test_scrapers(self, scraper_class):\n        setup_tests = SetupTests()\n        setup_tests.get_jobs_careers(scraper_class)\n    \n        # You can now use the utility methods from TestUtils to avoid code duplication\n        scraped_jobs_data = TestUtils.scrape_jobs(setup_tests.scraper_data[0])\n        peviitor_jobs_data = TestUtils.scrape_peviitor(setup_tests.scraper_data[1], 'România')\n    \n        # Test Title\n        assert sorted(scraped_jobs_data[0]) == sorted(peviitor_jobs_data[0])\n        # Test job city\n        assert sorted(scraped_jobs_data[1]) == sorted(peviitor_jobs_data[1])\n        # Test job country\n>       assert sorted(scraped_jobs_data[2]) == sorted(peviitor_jobs_data[2])\nE       AssertionError: assert ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania'] == ['România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România']\nE         At index 0 diff: 'Romania' != 'România'\nE         Full diff:\nE           [\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE           ]\n\ntests/test_api.py:51: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"scraper_class","time":{"start":1702818059731,"stop":1702818059731,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false,"attachmentStep":false}],"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"TestScrapers"},{"name":"host","value":"fv-az884-613"},{"name":"thread","value":"2180-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"scraper_class","value":"<class 'sites.nagarro.NagarroScraper'>"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["regression"]},"source":"d9a2058f531ab5ff.json","parameterValues":["<class 'sites.nagarro.NagarroScraper'>"]}