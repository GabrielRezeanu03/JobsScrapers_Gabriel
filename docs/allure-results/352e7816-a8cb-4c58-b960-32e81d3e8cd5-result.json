{"name": "test_scrapers[NagarroScraper]", "status": "failed", "statusDetails": {"message": "AssertionError: assert ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania'] == ['România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România']\n  At index 0 diff: 'Romania' != 'România'\n  Full diff:\n    [\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n  -  'România',\n  ?      ^\n  +  'Romania',\n  ?      ^\n    ]", "trace": "self = <test_api.TestScrapers object at 0x7fb297b8dcc0>\nscraper_class = <class 'sites.nagarro.NagarroScraper'>\n\n    @pytest.mark.regression\n    def test_scrapers(self, scraper_class):\n        setup_tests = SetupTests()\n        setup_tests.get_jobs_careers(scraper_class)\n    \n        # You can now use the utility methods from TestUtils to avoid code duplication\n        scraped_jobs_data = TestUtils.scrape_jobs(setup_tests.scraper_data[0])\n        peviitor_jobs_data = TestUtils.scrape_peviitor(setup_tests.scraper_data[1], 'România')\n    \n        # Test Title\n        assert sorted(scraped_jobs_data[0]) == sorted(peviitor_jobs_data[0])\n        # Test job city\n        assert sorted(scraped_jobs_data[1]) == sorted(peviitor_jobs_data[1])\n        # Test job country\n>       assert sorted(scraped_jobs_data[2]) == sorted(peviitor_jobs_data[2])\nE       AssertionError: assert ['Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania', 'Romania'] == ['România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România', 'România']\nE         At index 0 diff: 'Romania' != 'România'\nE         Full diff:\nE           [\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE         -  'România',\nE         ?      ^\nE         +  'Romania',\nE         ?      ^\nE           ]\n\ntests/test_api.py:51: AssertionError"}, "parameters": [{"name": "scraper_class", "value": "<class 'sites.nagarro.NagarroScraper'>"}], "start": 1703132429040, "stop": 1703132430685, "uuid": "26cc6c48-0fd5-4ff7-82b8-31a97fdc048a", "historyId": "b81ed4029bb3b482cd4fa679cb4972c9", "testCaseId": "4bc2cc6839b96c36a6ebdfe7d6ca5f68", "fullName": "tests.test_api.TestScrapers#test_scrapers", "labels": [{"name": "tag", "value": "regression"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_api"}, {"name": "subSuite", "value": "TestScrapers"}, {"name": "host", "value": "fv-az983-197"}, {"name": "thread", "value": "2187-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_api"}]}