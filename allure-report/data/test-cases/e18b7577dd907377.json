{
  "uid" : "e18b7577dd907377",
  "name" : "test_scrapers[ellisiumScraper]",
  "fullName" : "tests.test_api.TestScrapers#test_scrapers",
  "historyId" : "afc0b5eb6682e85e46d5f820dc915b05",
  "time" : {
    "start" : 1702673027884,
    "stop" : 1702673028861,
    "duration" : 977
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert ['Coafor', 'Cosmetica', 'Manichiura si pedichiura'] == []\n  Left contains 3 more items, first extra item: 'Coafor'\n  Full diff:\n  - []\n  + ['Coafor', 'Cosmetica', 'Manichiura si pedichiura']",
  "statusTrace" : "self = <test_api.TestScrapers object at 0x7f39e0053e20>\nscraper_class = <class 'sites.ellisium.ellisiumScraper'>\n\n    @pytest.mark.regression\n    def test_scrapers(self, scraper_class):\n        setup_tests = SetupTests()\n        setup_tests.get_jobs_careers(scraper_class)\n    \n        # You can now use the utility methods from TestUtils to avoid code duplication\n        scraped_jobs_data = TestUtils.scrape_jobs(setup_tests.scraper_data[0])\n        peviitor_jobs_data = TestUtils.scrape_peviitor(setup_tests.scraper_data[1], 'RomÃ¢nia')\n    \n        # Test Title\n>       assert sorted(scraped_jobs_data[0]) == sorted(peviitor_jobs_data[0])\nE       AssertionError: assert ['Coafor', 'Cosmetica', 'Manichiura si pedichiura'] == []\nE         Left contains 3 more items, first extra item: 'Coafor'\nE         Full diff:\nE         - []\nE         + ['Coafor', 'Cosmetica', 'Manichiura si pedichiura']\n\ntests/test_api.py:47: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "scraper_class",
    "time" : {
      "start" : 1702673027884,
      "stop" : 1702673027884,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "regression"
  }, {
    "name" : "parentSuite",
    "value" : "tests"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "subSuite",
    "value" : "TestScrapers"
  }, {
    "name" : "host",
    "value" : "fv-az739-442"
  }, {
    "name" : "thread",
    "value" : "2122-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "scraper_class",
    "value" : "<class 'sites.ellisium.ellisiumScraper'>"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "regression" ]
  },
  "source" : "e18b7577dd907377.json",
  "parameterValues" : [ "<class 'sites.ellisium.ellisiumScraper'>" ]
}