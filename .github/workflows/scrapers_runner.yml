on:
  schedule:
    - cron: '00 04 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    - name: Add Python Path
      run: echo "PYTHONPATH=${{ github.workspace }}" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python3 -m pip install --upgrade pip
        pip3 install -r requirements.txt
        pip3 install allure-pytest
        sudo apt-get install curl

    # - name: All scrapers run
    #   env:
    #     API_KEY: ${{ secrets.API_KEY }}
    #   run: |
    #     python3 sites/script_runner.py || true
    #     echo "Continuing despite potential failure..."

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: '11'

    - name: Download and install Allure Commandline 2.25.0
      run: |
        curl -o allure-commandline.zip -Ls https://repo.maven.apache.org/maven2/io/qameta/allure/allure-commandline/2.25.0/allure-commandline-2.25.0.zip
        unzip allure-commandline.zip -d allure
        rm allure-commandline.zip
        chmod +x allure/allure-2.25.0/bin/allure

    - name: Run pytest with Allure reporting
      continue-on-error: true
      run: |
        pytest -m regression -vv --alluredir=allure-results

    - name: Generate Allure report
      run: |
        allure/allure-2.25.0/bin/allure generate --single-file
        
    - name: Move Allure results to docs folder
      run: mv -f "allure-report/index.html" "docs/api_test_report_allure.html"

    - name: Commit and push Allure report
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add docs/api_test_report_allure.html
        git commit -m "Add Allure test report"
        git push origin main
        
